{"version":3,"sources":["contexts/ThemeContext.js","contexts/AuthContext.js","Reducers/BookReducer.js","contexts/BookContext.js","components/NavBar.js","components/NewBookForm.js","components/BookDetails.js","components/BookList.js","components/ThemeToggle.js","App.js","reportWebVitals.js","index.js"],"names":["ThemeContext","createContext","ThemeContextProvider","children","useState","isLightTheme","setIsLightTheme","syntax","ui","bg","st","light","dark","toggleTheme","useCallback","Provider","value","AuthContext","AuthContextProvider","isAuth","setIsAuth","toggleAuth","bookReducer","state","action","type","name","book","bookValue","author","id","Math","random","filter","BookContext","BookContextProvider","useReducer","localData","localStorage","getItem","JSON","parse","books","dispatch","useEffect","setItem","stringify","NavBar","themeContext","useContext","authContext","theme","style","background","color","length","onClick","NewBookForm","setBookValue","setAuthor","handleSubmit","e","preventDefault","onSubmit","placeholder","required","onChange","target","BookDetails","className","BookList","map","ThemeToggle","borderRadius","padding","marginTop","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5746f3c3.chunk.js","sourcesContent":["import React, {createContext, useCallback, useState} from 'react';\r\n\r\nexport const ThemeContext = createContext()\r\n\r\nconst ThemeContextProvider = ({children}) => {\r\n\r\n    const [isLightTheme, setIsLightTheme] = useState(true)\r\n    const [light, setLight] = useState({\r\n        syntax : '#000',\r\n        ui : '#ddd',\r\n        bg : '#eee',\r\n        st : '#000'\r\n    })\r\n    const [dark, setDark] = useState({\r\n        syntax : '#ddd',\r\n        ui : '#333',\r\n        bg : '#555',\r\n        st : '#fff'\r\n    })\r\n\r\n    const toggleTheme = useCallback(() => {\r\n       setIsLightTheme(!isLightTheme)\r\n    },[setIsLightTheme, isLightTheme])\r\n\r\n    return(\r\n        <ThemeContext.Provider value={{isLightTheme,light,dark, toggleTheme}}>\r\n            {children}\r\n        </ThemeContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ThemeContextProvider\r\n","import React, {createContext,useState,useCallback} from 'react'\r\n\r\nexport const AuthContext = createContext()\r\n\r\nconst AuthContextProvider = ({children}) => {\r\n\r\n    const [isAuth, setIsAuth] = useState(false)\r\n\r\n    const toggleAuth = useCallback(\r\n        () => {\r\n           setIsAuth(!isAuth)\r\n        },\r\n        [setIsAuth,isAuth],\r\n    )\r\n    return (\r\n        <div>\r\n            <AuthContext.Provider value={{isAuth, toggleAuth}}>\r\n                {children}\r\n            </AuthContext.Provider>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthContextProvider\r\n"," /*\r\n        Reducers \r\n            * Reducer function - interacts with the state/data\r\n            * Action object - type of change what we are goint to do in reducer function\r\n            * Dispatch function - send the action to reducer\r\n          \r\n            *  Reducer(action, state) ===> \r\n                        1. Check the action.hljs-type\r\n                        2. Update the state object\r\n                        3. Return the state\r\n    */\r\n\r\nexport const bookReducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'ADD_BOOK' : \r\n            return [...state, {\r\n                name: action.book.bookValue, \r\n                author: action.book.author, \r\n                id :  Math.random()*100\r\n            }];\r\n        \r\n        case 'REMOVE_BOOK' : \r\n            return state.filter(book => book.id !== action.id);\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { createContext, useEffect, useReducer} from 'react';\r\nimport {bookReducer} from '../Reducers/BookReducer'\r\n\r\nexport const BookContext = createContext()\r\n\r\nconst BookContextProvider = ({children}) => {\r\n\r\n    // const [books, setBooks] = useState([\r\n    //     {name :'The way of kings' , author: 'Patrick Thomson', id : 1},\r\n    //     {name :'Twilight' ,author: 'Stephony Meyor', id : 2},\r\n    //     {name :'Harry Potter', author: 'J.K Rowling', id : 3}\r\n    // ])\r\n\r\n    // Replace useState with useReducer\r\n\r\n    // Reducer function pass 2 arguments --> bookReducer function and initial values \r\n    // const [books, dispatch] = useReducer(bookReducer,[\r\n    //     {name :'The way of kings' , author: 'Patrick Thomson', id : 1},\r\n    //     {name :'Twilight' ,author: 'Stephony Meyor', id : 2},\r\n    //     {name :'Harry Potter', author: 'J.K Rowling', id : 3}\r\n    // ])\r\n\r\n    // const addBook = useCallback(\r\n    //     (bookName, author) => {\r\n    //         setBooks([...books, {name:bookName, author:author, id :  Math.random()*100}])\r\n    //     },\r\n    //     [setBooks,books]\r\n    // );\r\n\r\n    // const removeBook = useCallback(\r\n    //     (id) => {\r\n    //         setBooks(books.filter(book => book.id !== id));\r\n    //     },\r\n    //     [setBooks,books]\r\n    // );\r\n\r\n    // Covert these functions (addBook, removeBook) to the reducer funtion.\r\n\r\n     // Use local storge  ---- When we use context state - it will not store when we add some data. But we can keep that data using local storage even after refreshing\r\n     const [books, dispatch] = useReducer(bookReducer,[], () => {\r\n         const localData = localStorage.getItem('books');\r\n         return localData ? JSON.parse(localData) : []\r\n     });\r\n\r\n     useEffect(()=> {\r\n        localStorage.setItem('books', JSON.stringify(books))\r\n     },[books])\r\n\r\n    return (\r\n       <BookContext.Provider value={{books, dispatch}}>\r\n           {children}\r\n       </BookContext.Provider>\r\n    )\r\n}\r\n\r\nexport default BookContextProvider\r\n","import React, {useContext} from 'react';\r\nimport {ThemeContext } from '../contexts/ThemeContext';\r\nimport {AuthContext} from '../contexts/AuthContext';\r\nimport {BookContext} from '../contexts/BookContext'\r\n\r\nconst NavBar = () => {\r\n    \r\n    // Access values provided by the ThemeContext provider\r\n    const themeContext = useContext(ThemeContext);\r\n    const authContext = useContext(AuthContext);\r\n    const {books} = useContext(BookContext);\r\n\r\n    // Object destructuring\r\n    const {isLightTheme, dark, light} = themeContext;\r\n    const {isAuth, toggleAuth} = authContext;\r\n\r\n    const theme = isLightTheme ? light : dark;\r\n   \r\n    return (\r\n        <nav style={{background: theme.ui, color: theme.syntax}}>\r\n            <h1>Book Reading List</h1>\r\n            <p>Currently you have {books.length} books to get through ...</p>\r\n\r\n            <div onClick={toggleAuth}>\r\n                {isAuth ? 'Logged In' : 'Logged Out'}\r\n            </div>\r\n            {/* <ul>\r\n                <li>Home</li>\r\n                <li>About</li>\r\n                <li>Contact</li>\r\n            </ul> */}\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default NavBar","import React, {useState, useCallback, useContext} from 'react';\r\nimport {BookContext} from '../contexts/BookContext';\r\nimport {ThemeContext} from '../contexts/ThemeContext'\r\n\r\nconst NewBookForm = () => {\r\n\r\n    // const {addBook} = useContext(BookContext)\r\n    // Replace with dispatch from reducers\r\n    const {dispatch} = useContext(BookContext);\r\n    const {isLightTheme, dark, light} = useContext(ThemeContext);\r\n    const theme = isLightTheme ? light : dark;\r\n\r\n    const [bookValue, setBookValue] = useState('');\r\n    const [author, setAuthor] = useState('');\r\n\r\n    const handleSubmit = useCallback(\r\n        (e) => {\r\n            e.preventDefault();\r\n            //addBook(bookValue, author);\r\n            dispatch({type:'ADD_BOOK', \r\n                        book : {\r\n                            bookValue, author\r\n                        }});\r\n            setBookValue('');\r\n            setAuthor('');\r\n        },\r\n        [setBookValue,setAuthor,bookValue,author,dispatch]\r\n    );\r\n\r\n    return ( \r\n        <form onSubmit={handleSubmit} style={{background: theme.bg, color: theme.syntax}}>\r\n            <input type='text' placeholder='Book Title' style={{background: theme.ui}} value={bookValue} required onChange={(e) => setBookValue(e.target.value)}/>\r\n            <input type='text' placeholder='Author' style={{background: theme.ui}} value={author} required onChange={(e) => setAuthor(e.target.value)}/>\r\n            <input type='submit' value='Add Book' style={{background: theme.ui, color: theme.st}}/>\r\n        </form>\r\n     );\r\n}\r\n \r\nexport default NewBookForm;","import React, {useContext} from 'react';\r\nimport {BookContext} from '../contexts/BookContext';\r\nimport {ThemeContext} from '../contexts/ThemeContext';\r\n\r\nconst BookDetails = ({book}) => {\r\n\r\n    //const { removeBook} = useContext(BookContext);\r\n    const { dispatch} = useContext(BookContext);\r\n    const {isLightTheme, dark, light} = useContext(ThemeContext);\r\n    const theme = isLightTheme ? light : dark;\r\n\r\n    return (\r\n        <li onClick={() => dispatch({type: 'REMOVE_BOOK', id: book.id})} style={{background: theme.ui}}>\r\n            <div className='title'>{book.name}</div>\r\n            <div className='author'>{book.author}</div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default BookDetails","import React, {useContext, useState, useCallback, useEffect} from 'react'\r\nimport {ThemeContext } from '../contexts/ThemeContext';\r\nimport {BookContext} from '../contexts/BookContext';\r\nimport NewBookForm from './NewBookForm';\r\nimport BookDetails from './BookDetails';\r\n\r\nconst BookList = () => {\r\n\r\n    const {isLightTheme, dark, light} = useContext(ThemeContext);\r\n    const {books} = useContext(BookContext);\r\n\r\n    const theme = isLightTheme ? light : dark;\r\n\r\n    // const [books, setBooks] = useState([\r\n    //     {name :'The way of kings' , id : 1},\r\n    //     {name :'Twilight' , id : 2},\r\n    //     {name :'Harry Potter' , id : 3}\r\n    // ])\r\n\r\n    // const addBook = useCallback(\r\n    //     (bookName) => {\r\n    //         setBooks([...books, {name:bookName, id :  Math.random()*100}])\r\n    //     },\r\n    //     [setBooks,books]\r\n    // );\r\n    \r\n    // If we use useEffect without empty array as dependency it will run every time component render or data updated\r\n    // If we add empty array dependency it will run in the initial render\r\n\r\n    // useEffect(()=> {\r\n    //     console.log(\"UseEffect run \", books)\r\n    // },[])\r\n\r\n    return (\r\n        <>\r\n            {books.length ? \r\n                <div className='book-list' style={{background: theme.bg, color: theme.syntax}}>\r\n                    <ul>\r\n                        {books.map((book)=> {\r\n                            return(<BookDetails book={book} key={book.id}/>)\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n                :\r\n                <div className='empty'  style={{background: theme.bg, color: theme.syntax}}>\r\n                   <p> No books to read at this time</p>\r\n                </div>\r\n            }\r\n           <NewBookForm/>\r\n       </>\r\n    )\r\n}\r\n\r\nexport default BookList\r\n","import React, {useContext} from 'react'\r\nimport { ThemeContext } from '../contexts/ThemeContext'\r\n\r\nconst ThemeToggle = () => {\r\n\r\n    const {isLightTheme,toggleTheme} = useContext(ThemeContext)\r\n\r\n    return (\r\n       <button onClick={toggleTheme} style={{borderRadius:'10px', padding:'5px 20px 5px 20px', marginTop:'20px'}}>{isLightTheme ? 'Dark Mode' : 'Light Mode'}</button>\r\n    )\r\n}\r\n\r\nexport default ThemeToggle\r\n","import NavBar from './components/NavBar';\nimport BookList from './components/BookList';\nimport ThemeContextProvider from './contexts/ThemeContext';\nimport AuthContextProvider from './contexts/AuthContext';\nimport BookContextProvider from './contexts/BookContext';\nimport ThemeToggle from './components/ThemeToggle';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      {/* Pass NavBar and BookList as children properties of ThemeContext Provider*/}\n     <AuthContextProvider>\n      <ThemeContextProvider>\n        <BookContextProvider>\n          <NavBar/>\n          <BookList/>\n        <ThemeToggle/>\n        </BookContextProvider>\n      </ThemeContextProvider>\n     </AuthContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}